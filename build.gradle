plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: 'java'
apply plugin: 'maven'

repositories {
	mavenCentral()
}

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.eteration.assignment'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': 'Gradle Jar File Example',
				'Implementation-Version': version,
				'Main-Class': 'com.emrullah.aws.AwsRestApplication'
	}
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

task createPom  {
	pom {
		project {
			groupId 'scom.eteration.assignment'
			artifactId '0.0.1-SNAPSHOT'
			version '1.0.0-SNAPSHOT'

			inceptionYear '2008'
			licenses {
				license {
					name 'The Apache Software License, Version 2.0'
					url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					distribution 'repo'
				}
			}
		}
	}.writeTo("pom.xml")
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile 'com.alibaba:fastjson:1.2.61'
	runtimeOnly 'mysql:mysql-connector-java'
	compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.3.1.RELEASE'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.mockito:mockito-core')

}

test {
	useJUnitPlatform()
}
